{"version":3,"file":"pdf_analyzer.min.js","sources":["../src/pdf_analyzer.js"],"sourcesContent":["define([], function() {\n    return {\n        init: function() {\n            const getDraftId = () => document.getElementById('id_files')?.value;\n            const sesskey = M.cfg.sesskey; // Moodle disponibiliza isto globalmente\n            const filemanagerList = document.querySelector('.filemanager .fp-content');\n\n            if (!filemanagerList) {\n                alert('filemanager nÃ£o encontrado!');\n                return;\n            }\n\n            // Function to get current course ID\n            const getCurrentCourseId = function() {\n                // Try URL parameter first\n                var urlParams = new URLSearchParams(window.location.search);\n                var courseIdFromUrl = urlParams.get('id');\n                if (courseIdFromUrl && parseInt(courseIdFromUrl) > 0) {\n                    return parseInt(courseIdFromUrl);\n                }\n                \n                // Try body data attributes\n                var bodyElement = document.body;\n                if (bodyElement) {\n                    var courseIdFromBody = bodyElement.getAttribute('data-courseid') || \n                                          bodyElement.getAttribute('data-course-id');\n                    if (courseIdFromBody && parseInt(courseIdFromBody) > 0) {\n                        return parseInt(courseIdFromBody);\n                    }\n                }\n                \n                // Try Moodle config\n                if (typeof M !== 'undefined' && M.cfg && M.cfg.courseId && parseInt(M.cfg.courseId) > 0) {\n                    return parseInt(M.cfg.courseId);\n                }\n                \n                // Fallback - try to find course ID in page elements\n                var courseLink = document.querySelector('a[href*=\"course/view.php?id=\"]');\n                if (courseLink) {\n                    var match = courseLink.href.match(/[?&]id=(\\d+)/);\n                    if (match && parseInt(match[1]) > 0) {\n                        return parseInt(match[1]);\n                    }\n                }\n                \n                return null;\n            };\n\n            const fetchPdfInfo = (draftid) => {\n                const courseid = getCurrentCourseId();\n                fetch('/blocks/pdfaccessibility/ajax/preview.php', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-Requested-With': 'XMLHttpRequest'\n                    },\n                    body: JSON.stringify({ draftid, sesskey, courseid })\n                })\n                .then(res => res.json())\n                .then(data => {\n                    const div = document.getElementById('analyzer-result');\n                    if (!div) {return;}\n                    if (data.status !== 'ok' || !data.summary) {\n                        div.innerHTML = `<span style=\"color:red\">${data.message || 'Erro ao analisar PDF.'}</span>`;\n                        return;\n                    }\n\n                    // Tente obter o nome do PDF do local correto\n                    let filename = 'PDF';\n                    if (data.filename) {\n                        filename = data.filename;\n                    } else if (data.pdfs && data.pdfs[0] && data.pdfs[0].filename) {\n                        filename = data.pdfs[0].filename;\n                    }\n\n                    const summary = data.summary;\n                    const testConfig = data.testConfig || [];\n                    // Function to determine check value (matches PHP pdf_accessibility_config::determine_js_check_value)\n                    const determineCheckValue = (testKey, testValue) => {\n                        if (testValue === true) return 'Pass';\n                        if (testValue === 'PDF not tagged') return 'PDF not tagged';\n                        if (testValue === 'Non applicable') return 'Non applicable';\n                        if (testValue === false) return 'Fail';\n                        // Special cases\n                        if (testKey === 'Title' && testValue === 'No Title Found') return 'Fail';\n                        if (testKey === 'Title' && testValue !== 'No Title Found') return 'Pass';\n                        if (testKey === 'Languages match') return testValue ? 'Pass' : 'Fail';\n                        if (testKey === 'PDF only image') return testValue === 'PDF with text' ? 'Pass' : 'Fail';\n                        \n                        return testValue; // Return as-is for other cases\n                    };\n                    \n                    // Generate checks array using shared logic\n                    const checks = testConfig.map(config => {\n                        const value = determineCheckValue(config.key, summary[config.key]);\n                        return {\n                            label: config.label,\n                            value: value,\n                            pass: value === 'Pass',\n                            raw: summary[config.key],\n                            link: config.link,\n                            linkText: \"How to fix?\"\n                        };\n                    });\n\n                    const passed = checks.filter(c => c.pass).length;\n                    const nonApplicable = checks.filter(c => c.value === \"Non applicable\").length;\n                    const pdfNotTagged = checks.filter(c => c.value === \"PDF not tagged\").length;\n                    const failed = checks.length - passed - nonApplicable;\n                    \n                    // Custom sort: Pass -> Fail -> PDF not tagged -> Non applicable\n                    checks.sort((a, b) => {\n                        // Define priority order\n                        const getPriority = (check) => {\n                            if (check.pass) return 1; // Pass first\n                            if (check.value === \"Fail\") return 2; // Fail second\n                            if (check.value === \"PDF not tagged\") return 3; // PDF not tagged third\n                            if (check.value === \"Non applicable\") return 4; // Non applicable last\n                            return 5; // Any other case\n                        };\n                        \n                        return getPriority(a) - getPriority(b);\n                    });\n\n\n                    let html = `\n        <div style=\"font-family:Arial,sans-serif;max-width:320px;\">\n            <div style=\"background: #f8f9fa; border-radius: 8px; padding: 15px; background-color: white; \n            border-radius: 8px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); color: black; margin-bottom: 10px;\">\n                <i class=\"fas fa-universal-access\" aria-hidden=\"true\"></i>\n                <bold style=\"font-size: 0.95rem; font-weight: bold; margin-bottom: 2px;\">${filename}</bold><br>\n                <div style=\"margin-top:10px\">\n                    <span style=\"color:#27ae60;font-weight:bold;\">${passed}</span>\n                    <span style=\"color:black;\">passed</span>\n                    <span style=\"color:#e74c3c;font-weight:bold;margin-left:10px;\">${failed}</span>\n                    <span style=\"color:black;\">failed</span>\n                    \n                </div>\n            </div>\n            <div>\n            <div style=\"background: #f8f9fa;\n                        border-radius: 8px;\n                        padding: 10px;\n                        background-color: white;\n                        border-radius: 8px;\n                        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n                        color: black;\n                        margin-bottom: 10px;\">\n                             \n                    <bold style=\"   font-size: 0.90rem;\n                                    font-weight: bold;\n                                    margin-bottom: 2px;\">Detailed Report</bold><br>\n                    ${checks.map((c, i) => {\n                        let bg = c.pass ? '#eafaf1' : '#fff4f4';\n                        let icon = c.pass\n    ? '<i style=\"color:green;\" class=\"fa fa-check\" aria-hidden=\"true\"></i>'\n    : '<i style=\"color:red;\" class=\"fa fa-times\" aria-hidden=\"true\"></i>';\n                        let color = c.pass ? '#27ae60' : '#e74c3c';\n                        let opacity = 1;\n                        let extra = '';\n                        if (c.value === 'Non applicable') {\n                            bg = '#f3f3f3';\n                            color = '#000000ff';\n                            opacity = 0.6;\n                            icon = '<i style=\"color:#000000;\" class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>';\n                        }\n                        if (c.value === 'PDF not tagged') {\n                            bg = '#fffbe6';\n                            color = '#e6b800';\n                            icon = '<i style=\"color:#e6b800;\" class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>';\n                            extra = `<div style=\"margin-top:6px;padding:6px 8px;background:#fff3cd;border-radius:5px;color:#856404;\n                            font-size:0.88em;font-weight:bold;\">\n                                <i class='fa fa-exclamation-circle' style='margin-right:4px;'></i> This PDF is not tagged. \n                                We are unable to check the accessibility of this topic..\n                            </div>`;\n                        }\n                        return `\n    <div style=\"display:flex;align-items:flex-start;margin-top:8px;margin-bottom:10px;\n        background:${bg};\n        border-radius:6px;padding:6px 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);opacity:${opacity};\">\n        <span style=\"font-size:1.2em;margin-right:8px;margin-top:2px;color:${color};\">\n            ${icon}\n        </span>\n        <div style=\"flex:1;\">\n            <div style=\"display:flex;align-items:center;justify-content:space-between;\">\n                <div style=\"font-weight:bold; font-size: 0.925rem; color: #1e1e1e;\">${c.label}</div>\n                ${(!c.pass && c.value !== 'PDF not tagged' && c.value !== 'Non applicable') ? `\n                    <button type=\"button\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"fail-detail-${i}\"\n                        style=\"background:none;border:none;cursor:pointer;padding:0 6px;\"\n                        onclick=\"\n                            var d=document.getElementById('fail-detail-${i}');\n                            var a=this.querySelector('.arrow');\n                            var expanded=this.getAttribute('aria-expanded')==='true';\n                            d.style.display=expanded?'none':'block';\n                            this.setAttribute('aria-expanded',!expanded);\n                            a.style.transform=expanded?'rotate(0deg)':'rotate(90deg)';\n                        \">\n                        <span class=\"arrow\" style=\"display:inline-block;transition:transform 0.2s;\n                        vertical-align:middle;\">&#9662;</span>\n                    </button>\n                ` : ''}\n            </div>\n            <div style=\"font-size: 0.9rem; color: #282828; margin-left: 1%; margin-top: 1px;\">${c.value}</div>\n            ${(!c.pass && c.value !== 'PDF not tagged' && c.value !== 'Non applicable') ? `\n            <div id=\"fail-detail-${i}\" style=\"display:none;margin-top:5px;font-size:0.85em;color:#a94442;\">\n                <a href=\"${c.link}\" target=\"_blank\" rel=\"noopener\">${c.linkText || c.link}</a>\n            </div>\n        ` : ''}\n            ${extra}\n        </div>\n    </div>\n                        `;\n                    }).join('')}\n                        </div>\n                       \n                    </div>\n                    </div>\n                    `;\n                    div.innerHTML = html;\n                });\n            };\n\n            const observer = new MutationObserver(() => {\n                const draftid = getDraftId();\n                const div = document.getElementById('analyzer-result');\n                if (div) {\n                    div.innerHTML = '<span style=\"color:#555;\">Analyzing PDF accessibility, please wait...</span>';\n                }\n                if (draftid) {\n                    fetchPdfInfo(draftid);\n                }\n            });\n\n            observer.observe(filemanagerList, {\n                childList: true,\n                subtree: true\n            });\n        }\n    };\n});"],"names":["define","init","sesskey","M","cfg","filemanagerList","document","querySelector","alert","fetchPdfInfo","draftid","courseid","courseIdFromUrl","URLSearchParams","window","location","search","get","parseInt","bodyElement","body","courseIdFromBody","getAttribute","courseId","courseLink","match","href","getCurrentCourseId","fetch","method","headers","JSON","stringify","then","res","json","data","div","getElementById","status","summary","innerHTML","message","filename","pdfs","testConfig","checks","map","config","value","testKey","key","testValue","label","pass","raw","link","linkText","passed","filter","c","length","nonApplicable","failed","sort","a","b","getPriority","check","html","i","bg","icon","color","opacity","extra","join","MutationObserver","_document$getElementB","observe","childList","subtree"],"mappings":"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"}