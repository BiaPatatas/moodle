{"version":3,"file":"test_helper.min.js","sources":["../src/test_helper.js"],"sourcesContent":["/**\r\n * PDF Accessibility Test Helper for pdfaccessibility block\r\n */\r\ndefine([], function() {\r\n    \r\n    /**\r\n     * Determine check value based on test result\r\n     */\r\n    function determineCheckValue(testKey, testValue) {\r\n        if (testValue === true) return 'Pass';\r\n        if (testValue === 'PDF not tagged') return 'PDF not tagged';\r\n        if (testValue === 'Non applicable') return 'Non applicable';\r\n        if (testValue === false) return 'Fail';\r\n        \r\n        // Special cases\r\n        if (testKey === 'Title' && testValue === 'No Title Found') return 'Fail';\r\n        if (testKey === 'Title' && testValue !== 'No Title Found') return 'Pass';\r\n        if (testKey === 'Languages match') return testValue ? 'Pass' : 'Fail';\r\n        if (testKey === 'PDF only image') return testValue === 'PDF with text' ? 'Pass' : 'Fail';\r\n        \r\n        return testValue; // Return as-is for other cases\r\n    }\r\n    \r\n    /**\r\n     * Test configuration - centralized for easy maintenance\r\n     */\r\n    const testConfig = [\r\n        { key: 'Title', label: 'Document Title Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF18\" },\r\n        { key: 'Languages match', label: 'Language Consistency Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF16\" },\r\n        { key: 'PDF only image', label: 'OCR Application Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF7\" },\r\n        { key: 'Links Valid', label: 'Link Validity Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF11\" },\r\n        { key: 'Figures with alt text', label: 'Image Alt Text Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF1\" },\r\n        { key: 'Lists marked as Lists', label: 'List Tagging Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF21\" },\r\n        { key: 'Table With Headers', label: 'Table Header Check', link: \"https://www.w3.org/TR/WCAG20-TECHS/pdf#PDF6\" }\r\n    ];\r\n    \r\n    /**\r\n     * Generate checks array from summary data\r\n     */\r\n    function generateChecks(summary) {\r\n        return testConfig.map(config => {\r\n            const value = determineCheckValue(config.key, summary[config.key]);\r\n            return {\r\n                label: config.label,\r\n                value: value,\r\n                pass: value === 'Pass',\r\n                raw: summary[config.key],\r\n                link: config.link,\r\n                linkText: \"How to fix?\"\r\n            };\r\n        });\r\n    }\r\n    \r\n    return {\r\n        generateChecks: generateChecks,\r\n        determineCheckValue: determineCheckValue,\r\n        testConfig: testConfig\r\n    };\r\n});"],"names":["define","determineCheckValue","testKey","testValue","testConfig","key","label","link","generateChecks","summary","map","config","value","pass","raw","linkText"],"mappings":"AAGAA,4CAAO,IAAI,oBAKEC,oBAAoBC,QAASC,kBAChB,IAAdA,UAA2B,OACb,mBAAdA,UAAuC,iBACzB,mBAAdA,UAAuC,kBACzB,IAAdA,WAGY,UAAZD,SAAqC,mBAAdC,UAHK,OAIhB,UAAZD,SAAqC,mBAAdC,UAAuC,OAClD,oBAAZD,QAAsCC,UAAY,OAAS,OAC/C,mBAAZD,QAAmD,kBAAdC,UAAgC,OAAS,OAE3EA,gBAMLC,WAAa,CACf,CAAEC,IAAK,QAASC,MAAO,uBAAwBC,KAAM,gDACrD,CAAEF,IAAK,kBAAmBC,MAAO,6BAA8BC,KAAM,gDACrE,CAAEF,IAAK,iBAAkBC,MAAO,wBAAyBC,KAAM,+CAC/D,CAAEF,IAAK,cAAeC,MAAO,sBAAuBC,KAAM,gDAC1D,CAAEF,IAAK,wBAAyBC,MAAO,uBAAwBC,KAAM,+CACrE,CAAEF,IAAK,wBAAyBC,MAAO,qBAAsBC,KAAM,gDACnE,CAAEF,IAAK,qBAAsBC,MAAO,qBAAsBC,KAAM,sDAoB7D,CACHC,wBAfoBC,gBACbL,WAAWM,KAAIC,eACZC,MAAQX,oBAAoBU,OAAON,IAAKI,QAAQE,OAAON,YACtD,CACHC,MAAOK,OAAOL,MACdM,MAAOA,MACPC,KAAgB,SAAVD,MACNE,IAAKL,QAAQE,OAAON,KACpBE,KAAMI,OAAOJ,KACbQ,SAAU,mBAOlBd,oBAAqBA,oBACrBG,WAAYA"}