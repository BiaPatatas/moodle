{"version":3,"file":"pdf_counter_monitor.min.js","sources":["../src/pdf_counter_monitor.js"],"sourcesContent":["define(['jquery'], function($) {\r\n    var PdfCounterMonitor = {\r\n        courseid: null,\r\n        refreshInterval: 3000, // 3 seconds for faster updates\r\n        intervalId: null,\r\n        initialized: false,\r\n\r\n        init: function(courseid) {\r\n            // Get course ID from multiple sources, prioritizing the most reliable\r\n            this.courseid = this.getCurrentCourseId(courseid);\r\n            \r\n            if (!this.courseid || this.courseid <= 0) {\r\n                return;\r\n            }\r\n            \r\n            this.startMonitoring();\r\n            this.setupDOMObserver();\r\n            this.initialized = true;\r\n        },\r\n\r\n        getCurrentCourseId: function(providedCourseId) {\r\n            // Priority order for getting course ID:\r\n            // 1. Provided course ID parameter\r\n            // 2. From URL parameters\r\n            // 3. From page body data attributes\r\n            // 4. From M.cfg if available\r\n            \r\n            if (providedCourseId && providedCourseId > 0) {\r\n                return providedCourseId;\r\n            }\r\n            \r\n            // Try to get from URL\r\n            var urlParams = new URLSearchParams(window.location.search);\r\n            var courseIdFromUrl = urlParams.get('id');\r\n            if (courseIdFromUrl && parseInt(courseIdFromUrl) > 0) {\r\n                return parseInt(courseIdFromUrl);\r\n            }\r\n            \r\n            // Try to get from body data attributes\r\n            var bodyElement = document.querySelector('body');\r\n            if (bodyElement) {\r\n                var courseIdFromBody = bodyElement.getAttribute('data-courseid') || \r\n                                     bodyElement.getAttribute('data-course-id');\r\n                if (courseIdFromBody && parseInt(courseIdFromBody) > 0) {\r\n                    return parseInt(courseIdFromBody);\r\n                }\r\n            }\r\n            \r\n            // Try to get from page context\r\n            var pageWrapper = document.querySelector('#page-wrapper');\r\n            if (pageWrapper) {\r\n                var courseIdFromWrapper = pageWrapper.getAttribute('data-courseid');\r\n                if (courseIdFromWrapper && parseInt(courseIdFromWrapper) > 0) {\r\n                    return parseInt(courseIdFromWrapper);\r\n                }\r\n            }\r\n            \r\n            // Try from course header\r\n            var courseHeader = document.querySelector('.course-content');\r\n            if (courseHeader) {\r\n                var courseIdFromHeader = courseHeader.getAttribute('data-courseid');\r\n                if (courseIdFromHeader && parseInt(courseIdFromHeader) > 0) {\r\n                    return parseInt(courseIdFromHeader);\r\n                }\r\n            }\r\n            \r\n            // Last resort: M.cfg\r\n            if (M.cfg && M.cfg.courseid && M.cfg.courseid > 0) {\r\n                return M.cfg.courseid;\r\n            }\r\n            \r\n            // Fallback: try to extract from current URL path\r\n            var pathMatch = window.location.pathname.match(/\\/course\\/view\\.php/);\r\n            if (pathMatch && courseIdFromUrl) {\r\n                return parseInt(courseIdFromUrl);\r\n            }\r\n            \r\n            return null;\r\n        },\r\n\r\n        startMonitoring: function() {\r\n            var self = this;\r\n            this.intervalId = setInterval(function() {\r\n                self.refreshDashboard();\r\n            }, this.refreshInterval);\r\n        },\r\n\r\n        stopMonitoring: function() {\r\n            if (this.intervalId) {\r\n                clearInterval(this.intervalId);\r\n                this.intervalId = null;\r\n            }\r\n        },\r\n\r\n        refreshDashboard: function() {\r\n            var self = this;\r\n            \r\n            // Make AJAX call to refresh dashboard data\r\n            $.ajax({\r\n                url: M.cfg.wwwroot + '/blocks/pdfcounter/ajax/update_dashboard.php',\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                contentType: 'application/json',\r\n                data: JSON.stringify({\r\n                    courseid: this.courseid,\r\n                    sesskey: M.cfg.sesskey\r\n                }),\r\n                success: function(response) {\r\n                    if (response.status === 'ok') {\r\n                        self.updateDashboardUI(response);\r\n                    }\r\n                },\r\n                error: function(xhr, status, error) {\r\n                    // Silent fail for production\r\n                }\r\n            });\r\n        },\r\n\r\n        updateDashboardUI: function(data) {\r\n            // Update overall accessibility value\r\n            var overallElement = $('#overall-accessibility-value');\r\n            if (overallElement.length) {\r\n                overallElement.text(data.overallProgress + '%');\r\n                \r\n                // Apply color based on progress (keep black as user requested)\r\n                var color = '#000000ff';\r\n                overallElement.css('color', color);\r\n            }\r\n\r\n            // Update progress bar (HTML5 progress element)\r\n            var progressBar = $('.pdf-counter-progress-bar');\r\n            if (progressBar.length) {\r\n                // Update the value attribute\r\n                progressBar.attr('value', data.overallProgress);\r\n                \r\n                // Update the CSS custom property for color\r\n                var progressColor = data.overallProgress >= 80 ? '#28a745' : \r\n                                   (data.overallProgress >= 50 ? '#ffc107' : '#dc3545');\r\n                progressBar.css('--progress-color', progressColor);\r\n            }\r\n\r\n            // Update PDF issues list\r\n            this.updatePdfIssues(data.pdfIssues);\r\n            \r\n            // Update historical trends chart\r\n            this.updateHistoricalChart(data.overallProgress);\r\n            \r\n            // Update total count if element exists\r\n            var totalElement = $('.total-pdfs-count');\r\n            if (totalElement.length) {\r\n                totalElement.text(data.totalPdfs + ' PDFs');\r\n            }\r\n        },\r\n\r\n        updatePdfIssues: function(pdfIssues) {\r\n            var issuesList = $('#pdf-issues-list tbody');\r\n            if (!issuesList.length) return;\r\n\r\n            if (!pdfIssues || pdfIssues.length === 0) {\r\n                issuesList.html('<tr><td colspan=\"2\" style=\"text-align: center; color: #28a745; font-style: italic; padding: 15px;\">No PDF accessibility issues found.</td></tr>');\r\n                return;\r\n            }\r\n\r\n            var html = '';\r\n            var self = this; // Store reference to this\r\n            pdfIssues.forEach(function(pdf) {\r\n                var applicableTests = pdf.pass_count + pdf.fail_count + pdf.not_tagged_count;\r\n                var failedTests = pdf.fail_count + pdf.not_tagged_count;\r\n                \r\n                // Generate download URL (using course ID from the monitor)\r\n                var downloadUrl = M.cfg.wwwroot + '/blocks/pdfcounter/download_report.php?filename=' + \r\n                                encodeURIComponent(pdf.filename) + '&courseid=' + self.courseid;\r\n\r\n                html += '<tr>';\r\n                html += '  <td style=\"align-content: flex-start;\">' + pdf.filename + '</td>';\r\n                html += '  <td style=\"text-align:right; font-weight: bold; width:100%;\">' + failedTests + ' of ' + applicableTests + ' tests failed</td>';\r\n                html += '</tr>';\r\n                html += '<tr>';\r\n                html += '  <td></td>';\r\n                html += '  <td style=\"text-align: right;\"><a href=\"' + downloadUrl + '\" target=\"_blank\" style=\"margin-left:8px; font-size:0.9em;\"><i class=\"fa fa-download\" aria-hidden=\"true\"></i> Download Report</a></td>';\r\n                html += '</tr>';\r\n            });\r\n\r\n            issuesList.html(html);\r\n        },\r\n\r\n        updateHistoricalChart: function(currentProgress) {\r\n            // Check if Chart.js is available and chart exists\r\n            if (typeof Chart !== 'undefined' && window.progressChart) {\r\n                // Get current month\r\n                var currentMonth = new Date().toISOString().slice(0, 7); // Format: YYYY-MM\r\n                \r\n                // Get current data\r\n                var chart = window.progressChart;\r\n                var labels = chart.data.labels;\r\n                var data = chart.data.datasets[0].data;\r\n                \r\n                // Update or add current month data\r\n                var monthIndex = labels.indexOf(currentMonth);\r\n                if (monthIndex !== -1) {\r\n                    // Update existing month\r\n                    data[monthIndex] = currentProgress;\r\n                } else {\r\n                    // Add new month\r\n                    labels.push(currentMonth);\r\n                    data.push(currentProgress);\r\n                    \r\n                    // Keep only last 6 months\r\n                    if (labels.length > 6) {\r\n                        labels.shift();\r\n                        data.shift();\r\n                    }\r\n                }\r\n                \r\n                // Update the chart\r\n                chart.update();\r\n            }\r\n        },\r\n\r\n        setupDOMObserver: function() {\r\n            var self = this;\r\n            \r\n            // Watch for changes in course content area\r\n            var targetNode = document.querySelector('#region-main');\r\n            if (!targetNode) return;\r\n\r\n            var observer = new MutationObserver(function(mutations) {\r\n                var shouldRefresh = false;\r\n                \r\n                mutations.forEach(function(mutation) {\r\n                    if (mutation.type === 'childList') {\r\n                        // Check if any activity elements were added or removed\r\n                        mutation.addedNodes.forEach(function(node) {\r\n                            if (node.nodeType === Node.ELEMENT_NODE) {\r\n                                if (node.classList.contains('activity') || \r\n                                    node.querySelector('.activity') ||\r\n                                    node.classList.contains('resource') ||\r\n                                    node.querySelector('.resource') ||\r\n                                    node.classList.contains('activityinstance') ||\r\n                                    node.querySelector('.activityinstance')) {\r\n                                    shouldRefresh = true;\r\n                                }\r\n                            }\r\n                        });\r\n                        \r\n                        mutation.removedNodes.forEach(function(node) {\r\n                            if (node.nodeType === Node.ELEMENT_NODE) {\r\n                                if (node.classList.contains('activity') || \r\n                                    node.querySelector('.activity') ||\r\n                                    node.classList.contains('resource') ||\r\n                                    node.querySelector('.resource') ||\r\n                                    node.classList.contains('activityinstance') ||\r\n                                    node.querySelector('.activityinstance')) {\r\n                                    shouldRefresh = true;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                if (shouldRefresh) {\r\n                    // Add a delay to allow DB operations to complete\r\n                    setTimeout(function() {\r\n                        self.refreshDashboard();\r\n                    }, 2000);\r\n                }\r\n            });\r\n\r\n            observer.observe(targetNode, {\r\n                childList: true,\r\n                subtree: true\r\n            });\r\n        },\r\n\r\n        destroy: function() {\r\n            this.stopMonitoring();\r\n            this.initialized = false;\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: function(courseid) {\r\n            PdfCounterMonitor.init(courseid);\r\n        },\r\n        \r\n        destroy: function() {\r\n            PdfCounterMonitor.destroy();\r\n        }\r\n    };\r\n});"],"names":["define","$","PdfCounterMonitor","courseid","refreshInterval","intervalId","initialized","init","this","getCurrentCourseId","startMonitoring","setupDOMObserver","providedCourseId","courseIdFromUrl","URLSearchParams","window","location","search","get","parseInt","bodyElement","document","querySelector","courseIdFromBody","getAttribute","pageWrapper","courseIdFromWrapper","courseHeader","courseIdFromHeader","M","cfg","pathname","match","self","setInterval","refreshDashboard","stopMonitoring","clearInterval","ajax","url","wwwroot","type","dataType","contentType","data","JSON","stringify","sesskey","success","response","status","updateDashboardUI","error","xhr","overallElement","length","text","overallProgress","css","progressBar","attr","progressColor","updatePdfIssues","pdfIssues","updateHistoricalChart","totalElement","totalPdfs","issuesList","html","forEach","pdf","applicableTests","pass_count","fail_count","not_tagged_count","failedTests","downloadUrl","encodeURIComponent","filename","currentProgress","Chart","progressChart","currentMonth","Date","toISOString","slice","chart","labels","datasets","monthIndex","indexOf","push","shift","update","targetNode","MutationObserver","mutations","shouldRefresh","mutation","addedNodes","node","nodeType","Node","ELEMENT_NODE","classList","contains","removedNodes","setTimeout","observe","childList","subtree","destroy"],"mappings":"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"}